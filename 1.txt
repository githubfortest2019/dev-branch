//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// JQuery

<script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// Bootstrap (+ необходимо подключить JQuery)

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// LESS

<link rel="stylesheet/less" type="text/css" href="Путь к файлу *.less">
<script src="//cdnjs.cloudflare.com/ajax/libs/less.js/3.9.0/less.min.js"></script>

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// GET запрос на чистом JavaScript

let xhr = new XMLHttpRequest();
xhr.open('GET', 'https://api.github.com/gists/public');
xhr.responseType = 'json';
xhr.send();

xhr.onload = function() {
	console.log(xhr.response);
};

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// GET запрос с использованием JQuery

$.ajax({
    url: "https://api.github.com/gists/public",
    dataType: "json"
})
.done(function(dataJson) {
	console.log(dataJson);
});

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// Модальное окно

<button type="button"
		id="btnId"
		name="btnName"
		data-toggle="modal"
		data-target="#modalWindowId">
		    Модальное окно
</button>

<div class="modal fade" id="modalWindowId" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
            	<h1>Заголовок окна</h1>
            </div>
            <div class="modal-body">
                <span>Текст окна</span>
            </div>
        </div>
    </div>
</div>

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// jsTree

<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />

<div id="jstree-tree"></div>

let dataJson = [
	{
		"id": "1",
		"text": "Node 1"
	},
	{
		"id": "2",
		"text": "Node 2"
	},
	{
		"id": "3",
		"text": "Node 3"
	}
];

$('#jstree-tree').jstree({
	core: {
		data: dataJson
	},
	plugins: ["contextmenu"],
	contextmenu: {
		"select_node": false,
		"items": contextMenu
	}
})
.on('loaded.jstree', function() {
	$('#jstree-tree').jstree('open_all');
});

function contextMenu(node) {
    return {
        createItem : {
	        "label" : "Создать",
	        "action" : function() {
	        	console.log("Создать");
	        }
        },
        renameItem : {
	        "label" : "Редактировать",
	        "action" : function() {
	        	console.log("Редактировать");
	        }
        },
        deleteItem : {
	        "label" : "Удалить",
	        "action" : function() {
	        	console.log("Удалить");
	        }
        }
    };  
}

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// Select2

<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js"></script>

<select id="selectId"
		class="form-control flat valid select2" >
		<option></option>
</select>

let dataJson = [
	{
		"code": "1",
		"name": "Object 1"
	},
	{
		"code": "2",
		"name": "Object 2"
	},
	{
		"code": "3",
		"name": "Object 3"
	}
];

$('#selectId').select2({
	placeholder: "Выберите элемент из списка",
	data: $.map(dataJson, function (item) {
		return {
			id: item.code,
			text: item.name
		};
	})
}).on('change', function (e) {
	console.log("Выбран элемент"); 
});

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// Анимация изображений "Волновой эффект"

<div class="wrapper">
	<div class="main">
		<h1 class="main_title">ООО "СИБИНТЕК-СОФТ"</h1>
	</div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
	<div class="overlay"></div>
</div>

* {
	padding: 0;
	margin: 0;
	box-sizing: border-box;;
}

.wrapper {
	display: flex;
	height: 100vh;
	position: relative;
}

.main {
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	background: url(https://oboi.ws/wallpapers/26_10219_oboi_temnoe_nebo_nad_gorodom_2560x1600.jpg) no-repeat center;
	background-size: cover;
	z-index: 3;
}

.main_title {
	color: white;
	font-size: 58px;
	font-family: 'Arial';
}

.overlay {
	width: 2%;
	height: 100%;
	position: relative;
	z-index: 4;
	background: url(https://www.agencevarenne.fr/img/pages/1280x1920-1.jpg) no-repeat center;
	background-attachment: fixed;
	transition: 1.2s linear;
}

.overlay:hover {
	transition: 0s linear;
	opacity: 0;
}

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// Анимированный 3D Progressbar

<div class="wrapper">
	<div class="progressbar">
		<input class="progressbar_checker" type="radio" id="zero" name="progress-value">
		<label class="progressbar_controller" for="zero">0%</label>
		<input class="progressbar_checker" type="radio" id="twenty-five" name="progress-value">
		<label class="progressbar_controller" for="twenty-five">25%</label>
		<input class="progressbar_checker" type="radio" id="fifty" name="progress-value">
		<label class="progressbar_controller" for="fifty">50%</label>
		<input class="progressbar_checker" type="radio" id="seventy-five" name="progress-value">
		<label class="progressbar_controller" for="seventy-five">75%</label>
		<input class="progressbar_checker" type="radio" id="hundred" name="progress-value">
		<label class="progressbar_controller" for="hundred">100%</label>
		<div class="side side_front">
			<div class="side_fill"></div>
		</div>
		<div class="side side_back">
			<div class="side_fill"></div>
		</div>
		<div class="side side_bottom">
			<div class="side_fill"></div>
		</div>
		<div class="side side_top">
			<div class="side_fill"></div>
		</div>
		<div class="side side_left"></div>
	</div>
</div>

* {
	padding: 0;
	margin: 0;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

.wrapper {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	align-items: center;
	height: 100vh;
	background-color: rgba(222,222,222,1);
}

.progressbar {
	height: 50px;
	width: 380px;
	position: relative;
	transform-style: preserve-3d;
	transform: rotateX(-20deg) rotateY(-40deg);
}

.side {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: rgba(254,254,254,.3);
}

.side_bottom {
	transform: rotateX(90deg);
	box-shadow: 10px 5px 50px 5px rgba(0,0,0,.25);
	transform-origin: bottom;
}

.side_top {
	transform: rotateX(-90deg);
	transform-origin: top;
}

.side_back {
	transform: translateZ(-50px);
}

.side_left {
	width: 50px;
	transform: rotateY(90deg);
	transform-origin: left;
	background-color: rgba(0,139,139,.5);
}

.side_fill {
	position: absolute;
	top: 0;
	left: 0;
	width: 50%;
	height: 100%;
	background-color: rgba(0,139,139,.5);
	transition: .3s all linear;
}

.progressbar_controller {
	display: inline-block;
	position: relative;
	top: -100px;
	left: 50px;
	font-size: 22px;
	font-family: 'Arial';
	color: white;
	padding: 5px;
	border-radius: 5px;
	margin-right: 14px;
	background-color: rgba(0,139,139,.5);
	box-shadow: 1px -2px 0px 0px rgba(56,121,121,1),
				2px -2px 0px 0px rgba(56,121,121,1),
				3px -2px 0px 0px rgba(56,121,121,1);
	cursor: pointer;
}

.progressbar_checker {
	display: none;
}

.progressbar_checker:checked + .progressbar_controller {
	background-color: rgba(0,139,139,1);
}

#zero:checked ~ div > .side_fill {
	width: 0;
}

#twenty-five:checked ~ div > .side_fill {
	width: 25%;
}

#fifty:checked ~ div > .side_fill {
	width: 50%;
}

#seventy-five:checked ~ div > .side_fill {
	width: 75%;
}

#hundred:checked ~ div > .side_fill {
	width: 100%;
}

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//



//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//



//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// Обрезанные углы у header и footer

header {
	height: 300px;
	background: url(https://img1.goodfon.ru/original/1920x1200/3/a6/derevo-tekstura-fon.jpg);
	position: relative;
	overflow: hidden;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
}

header:after {
	content: "";
	position: absolute;
	z-index: 1;
	pointer-events: none;
	bottom: 0;
	left: 0;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
	border-bottom: 100px solid white;
	border-left: 3000px solid transparent;
}

footer {
	height: 250px;
	background: url(https://img1.goodfon.ru/original/1920x1200/3/a6/derevo-tekstura-fon.jpg);
	position: relative;
	overflow: hidden;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
}

footer:before {
	top: 0;
	display: block;
	content: "";
	position: absolute;
	z-index: 1;
	pointer-events: none;
	bottom: 0;
	left: 0;
	width: 100%;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
	border-top: 100px solid white;
	border-right: 3000px solid transparent;
}

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// - Выскакивающая картинка

<img src="https://i.pinimg.com/originals/bb/4a/a8/bb4aa80ae93616c745600f664ae57ed5.jpg">

img {
	width: 400px;
	height: 230px;
	animation: animateImage 500ms ease-in-out 0s;
}

@keyframes animateImage {
    0% {
        opacity: 0;
        transform: scale3d(.3, .3, .3);
    }
    20% {
        transform: scale3d(1.3, 1.3, 1.3);
    }
    40% {
        transform: scale3d(.9, .9, .9);
    }
    60% {
        opacity: 1;
        transform: scale3d(1.03, 1.03, 1.03);
    }
    80% {
        transform: scale3d(.97, .97, .97);
    }
    100% {
        opacity: 1;
        transform: scale3d(1, 1, 1);
    }
}

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//

// - Старый телевизор

<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.0.2/TweenMax.min.js"></script>

<div class="tv" id="tv">
	<div class="tv-content">
		<h3 class="tv-text" id="tv-text">
			The end
		</h3>
	</div>
	<canvas class="noise" id="noise"></canvas>
</div>

.tv {
	overflow: hidden;
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-flow: column;
	width: 700px;
	height: 400px;
	background: linear-gradient(to right, rgba(36,31,31,1) 0%, rgba(36,31,31,1) 32%, rgba(74,71,70,1) 100%);
	color: #fff;
	text-align: center;
	border-radius: 10px;
	box-shadow: 3px 3px 10px 0 black;
	left: 50px;
	z-index: 1;
}

.noise {
	z-index: 100;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	pointer-events: none;
	opacity: .15;
}

.line {
	position: absolute;
	width: 1px;
	height: 100%;
	opacity: 0.1;
	background-color: #000;
}

.tv-content {
	position: relative;
}

.tv-text {
	padding: .3em 1em .25em;    
	font-weight: 400;
	font-size: 40px;
	color: white;
	font-family: 'Bellefair', serif;
	position: relative;
	line-height: 1.3;
}

.over-tv-content {
	position: absolute;
	top: 0;
	left: 0;
}

const noise = () => {
    let canvas, ctx;
    let wWidth, wHeight;
    let noiseData = [];
    let frame = 0;
    let loopTimeout;
    
    const createNoise = () => {
        const idata = ctx.createImageData(wWidth, wHeight);
        const buffer32 = new Uint32Array(idata.data.buffer);
        const len = buffer32.length;
        for (let i = 0; i < len; i++) {
            if (Math.random() < 0.5) {
                buffer32[i] = 0xff000000;
            }
        }
        noiseData.push(idata);
    };
    
    const paintNoise = () => {
        if (frame === 9) {
            frame = 0;
        }
        else {
            frame++;
        }
        ctx.putImageData(noiseData[frame], 0, 0);
    };
    
    const loop = () => {
        paintNoise(frame);
        loopTimeout = window.setTimeout(() => {
            window.requestAnimationFrame(loop);
        }, (1000 / 25));
    };
    
    const setup = () => {
        wWidth = window.innerWidth;
        wHeight = window.innerHeight;
        canvas.width = wWidth;
        canvas.height = wHeight;
        for (let i = 0; i < 10; i++) {
            createNoise();
        }
        loop();
    };

    let resizeThrottle;
    const reset = () => {
        window.addEventListener('resize', () => {
            window.clearTimeout(resizeThrottle);
            resizeThrottle = window.setTimeout(() => {
                window.clearTimeout(loopTimeout);
                setup();
            }, 200);
        }, false);
    };

    const init = (() => {
        canvas = document.getElementById('noise');
        ctx = canvas.getContext('2d');
        setup();
    })();
};

noise();

var title = document.getElementById('tv-text').cloneNode(true);
document.querySelector('.tv-content').appendChild(title);
title.classList.add("over-tv-content");
var line = document.createElement('div');
line.className = 'line';
document.getElementById('tv').appendChild(line); 

var tl = new TimelineMax({repeat:-1});

for(var i = 50; i--;) {
    tl.to(title, R(0.03, 0.17), {
        opacity: R(0, 1),
        y: R(-1.5, 1.5),
        x: R(-1.5, 1.5)
    });
};

tl.to(line, tl.duration() / 2, {
    opacity: R(0.1, 1),
    x: R(-window.innerWidth / 2, window.innerWidth / 2),
    ease: RoughEase.ease.config({
        strength: 0.5,
        points: 10,
        randomize: true,
        taper: "none"
    }),
    repeat: 1
}, 0);

var dot;
for (var i=0; i < 10; i++) {
    dot = document.createElement('div');
    dot.className = 'dot';
    document.getElementById('tv').prepend(dot); 
    setDotPosition(dot);
    tl.to(dot, 0.1, {
        opacity: 0,
        repeat: 1,
        yoyo: true,
        onComplete: setDotPosition,
        onCompleteParams: [dot],
        ease: RoughEase.ease.config({
            strength: 0.5,
            points: 10,
            randomize: true,
            taper: "none"
        })
    }, 0);
}

function setDotPosition(dot) {
    TweenMax.set(dot, {
        x: R(-window.innerWidth / 2, window.innerWidth / 2),
        y: R(-window.innerHeight, window.innerHeight),
        delay: R(0, 1)
    });
}

function R(max,min) {
    return Math.random() * (max - min) + min;
}

//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//